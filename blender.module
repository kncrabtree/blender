<?php

/**
 * Implements hook_theme().
 */
function blender_theme($existing, $type, $theme, $path) {
  $variables = array(
    'blender' => array(
      'variables' => array(
        'articles' => NULL,
        'more' => NULL,
        'page' => 'inbox',
        'inbox_new' => 0,
        'recommend_new' => 0,
      ),
      'template' => 'blender',
    ),
    'blender-article' => array(
      'variables' => array(
        'articles' => NULL,
      ),
      'template' => 'blender-article',
    ),
    'blender-comment' => array(
      'variables' => array(
        'comments' => NULL,
      ),
      'template' => 'blender-comment',
    ),
  );
  return $variables;
}

/**
 * Implements hook_cron().
 */
function blender_cron() {

  $queue = \Drupal::queue('journal_fetcher');

  if($queue->numberOfItems() > 0)
  {
    \Drupal::logger('blender')->notice("Not queuing more journals; queue not empty.");
    return;
  }

  $storage = \Drupal::entityTypeManager()->getStorage('blender_journal');
  $jids = \Drupal::entityQuery('blender_journal')
    ->condition('active', TRUE, '==')
    ->condition('last_update',\Drupal::time()->getRequestTime()-(24*60*60),'<')
    ->execute();

  $journals = $storage->loadMultiple($jids);


  foreach( $journals as $j ) {
    if($queue->createItem($j))
    {
      \Drupal::logger('blender')->notice("Queued ".$j->abbr->value);
    }
  }

//   //purge articles more than 180 days old that are not starred or preserved
//   $a_ids = \Drupal::entityQuery('blender_article')
//     ->condition('starred',false)
//     ->condition('date_added',\Drupal::time()->getRequestTime()-(24*60*60*14),'<')
//     ->condition('preserve',false)
//     ->execute();




}

