<?php

/**
 * Implements hook_theme().
 */
function blender_theme($existing, $type, $theme, $path) {
  $variables = array(
    'blender' => array(
      'variables' => array(
        'articles' => NULL,
        'more' => NULL,
        'page' => 'inbox',
      ),
      'template' => 'blender',
    ),
    'blender-article' => array(
      'variables' => array(
        'articles' => NULL,
      ),
      'template' => 'blender-article',
    ),
  );
  return $variables;
}

/**
 * Implements hook_cron().
 */
function blender_cron() {

  $queue = \Drupal::queue('journal_fetcher');

  if($queue->numberOfItems > 0)
  {
    \Drupal::logger('blender')->notice("Not queuing more journals; queue not empty.");
    return;
  }

  $storage = \Drupal::entityManager()->getStorage('blender_journal');
  $jids = \Drupal::entityQuery('blender_journal')
    ->condition('active', TRUE, '==')
    ->condition('last_update',REQUEST_TIME-(24*60*60),'<')
    ->execute();

  $journals = $storage->loadMultiple($jids);


  foreach( $journals as $j ) {
    if($queue->createItem($j))
    {
      \Drupal::logger('blender')->notice("Queued ".$j->abbr->value);
    }
  }
}
/*
function blender_menu_links_discovered_alter(&$links) {
  $user = \Drupal::currentUser();

  \Drupal::logger('blender')->notice("Menu alter user: ".$user->id());

  //get unread items in inbox
  $unread_inbox = \Drupal::entityQuery('blender_article')
    ->condition('user_id',$user->id())
    ->condition('inbox',true)
    ->count()->execute();

  $links['blender.inbox']['title'].= ' ('.$unread_inbox.')';
}*/
